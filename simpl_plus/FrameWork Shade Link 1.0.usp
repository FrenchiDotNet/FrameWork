/*
Dealer Name: Ask The Advisors
Programmer: Ryan French
*/

#SYMBOL_NAME "FrameWork Shade Link 1.0"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#PRINT_TO_TRACE
#USER_SIMPLSHARP_LIBRARY "FrameWork"

#DEFINE_CONSTANT ACTION_UP     1
#DEFINE_CONSTANT ACTION_DOWN   2
#DEFINE_CONSTANT ACTION_TOGGLE 3
#DEFINE_CONSTANT ACTION_STOP   4
#DEFINE_CONSTANT ACTION_VIEW   5

#DEFINE_CONSTANT FB_UP     11
#DEFINE_CONSTANT FB_DOWN   12
#DEFINE_CONSTANT FB_STOP   13
#DEFINE_CONSTANT FB_MOVING 14

#DEFINE_CONSTANT TYPE_TOGGLE         1
#DEFINE_CONSTANT TYPE_UPDOWN         2
#DEFINE_CONSTANT TYPE_UPDOWNSTOP     3
#DEFINE_CONSTANT TYPE_UPDOWNSTOPVIEW 4

//=====// I/O //=====//

DIGITAL_INPUT _SKIP_,
			  _SKIP_,
			  _SKIP_,
			  Shade_Up_Fb,
			  Shade_Down_Fb,
			  Shade_Stop_Fb,
			  Shade_Moving_Fb;

DIGITAL_OUTPUT _SKIP_,
			   _SKIP_,
			   _SKIP_,
			   Shade_Up,
			   Shade_Down,
			   Shade_Toggle,
			   Shade_Stop,
			   Shade_View;

INTEGER_PARAMETER Shade_ID,
				  Shade_ControlType;

STRING_PARAMETER  Shade_Name[32];

//=====// VARIABLES //=====//

Shade shd;

//=====// FUNCTIONS //=====//

CALLBACK FUNCTION TriggerShadeCommandHandler (INTEGER _action, INTEGER _state) {
	
	SWITCH (_action) {

    	CASE (ACTION_UP): {
        	Shade_Up = _state;
		}
		CASE (ACTION_DOWN): {
        	Shade_Down = _state;
		}
		CASE (ACTION_TOGGLE): {
        	Shade_Toggle = _state;
		}
		CASE (ACTION_STOP): {
        	Shade_STOP = _state;
		}
		CASE (ACTION_VIEW): {
        	Shade_View = _state;
		}

	}

}

//=====// EVENTS //=====//

CHANGE Shade_Up_Fb     { shd.FeedbackEvent(FB_UP, Shade_Up_Fb); }

CHANGE Shade_Down_Fb   { shd.FeedbackEvent(FB_DOWN, Shade_Down_Fb); }

CHANGE Shade_Stop_Fb   { shd.FeedbackEvent(FB_STOP, Shade_Stop_Fb); }

CHANGE Shade_Moving_Fb { shd.FeedbackEvent(FB_MOVING, Shade_Moving_Fb); }


//=====// MAIN //=====//

FUNCTION Main () {

	WAITFORINITIALIZATIONCOMPLETE ();

	shd.CreateShade (Shade_ID, Shade_Name, Shade_ControlType);

	REGISTERDELEGATE (shd, TriggerShadeCommand, TriggerShadeCommandHandler);

	if(Core.RegisterShade (shd) > 0) {
		// Success!
	}

}

